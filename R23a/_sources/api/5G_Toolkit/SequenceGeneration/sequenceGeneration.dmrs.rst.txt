Demodulation Reference Sequence (DMRS)
======================================
The demodulation reference signal (DMRS) is used for estimating channel for demodulating the data carried by a certain
physical channel. The DMRS is transmitted for every physical channel in downlink and uplink for coherent detection of data.
The DMRS is generated using a seed which is different for each physical channel. The parameter used for generating the DMRS
for each channel is given in following table.

.. list-table:: Table-1: Parameters for generating DMRS for each channel.
   :widths: 15 40 15
   :header-rows: 1

   * - Physical channel
     - Parameters
     - Number
   * - PBCH
     - cell-ID, ssbIndex, :math:`L_{max}`, half frame Index
     - 4
   * - PDCCH
     - scramblingID, symbolNumber, slotNumber
     - 3
   * - PDSCH
     - scramblingID, symbolNumber, slotNumber
     - 3

The details of DMRS generation for PBCH, PDCCH and PDSCH is defined in section 7.4.1.1, section 7.4.1.3 and, section 7.4.1.4
respectively of [3GPPTS38211_DMRS]_.

..  important::
    * The seed (:math:`c_{init}`) value is computed using the parameters defined in ``table-1`` for respective physical channels.

**When all the parameters are scalar:**:

.. code-block:: Python

    nssbCandidatesInHrf = 8
    nID          = 671
    ssbIndex     = 5
    hrfBit       = 0

    dmrsLen      = 144
    dmrsObject   = DMRS("PBCH", nID, ssbIndex, nssbCandidatesInHrf, hrfBit)
    dmrsSequence = dmrsObject(dmrsLen)

**When some parameters are arrays:**:

.. code-block:: Python

    symbNumber   = np.array([0,1])
    slotNumber   = 4
    scramblingID = int(np.random.randint(2**16))
    dmrsLen      = 48
    dmrsObject   = DMRS("PDCCH", symbNumber, slotNumber, scramblingID)
    dmrsSequence = dmrsObject(dmrsLen)


**When all possible parameters are arrays:**:

.. code-block:: Python

    numSymbols   = np.random.randint(2,10)
    symbNumber   = np.array([4,5,6,4,5,6], dtype = int)
    slotNumber   = np.array([2,2,2,3,3,3], dtype = int)
    scramblingID = int(np.random.randint(65535, dtype = int)) # or Cell-ID for Initial Access
    lambDa       = np.array([0,0,0,1,1,1], dtype = int)
    nSCID        = np.array([0,0,0,0,0,0], dtype = int)
    lengthDMRS   = 240

    dmrsObject   = DMRS("PDSCH", symbNumber, slotNumber, scramblingID, nSCID, lambDa)
    dmrsSequence = dmrsObject(lengthDMRS)

More example on DMRS generation can be found in Tutorials. The details about the input-output interface of the SSS
implementation is provided below.

.. autoclass:: toolkit5G.SequenceGeneration.DMRS
    :members:
    :exclude-members: call, build

References:
    .. [3GPPTS38211_DMRS] 3GPP TS 38.211 "Physical channels and modulation (Release 17)", V17.1.0 (2022-03).
