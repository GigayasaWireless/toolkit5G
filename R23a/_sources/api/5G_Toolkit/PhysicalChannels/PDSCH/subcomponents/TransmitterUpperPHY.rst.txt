Transmitter Processing
=======================

Transmitter
------------
Example : Transmission of 1 Transport Block wherein the transport block not given as an input.

.. code-block:: python

   symbolsPerSlot     = 10 #Number of Symbols per slot
   numRB              = 50 #Number of Resource Blocks
   scalingField       = '00' #Scaling field
   mcsIndex           = 5 #Modulation Coding scheme index
   additionalOverhead = 12 #Additional Overheads
   numlayers          = [4, 0] #Number of layers
   numTBs             = 1 #Number of Transport Blocks
   enableLBRM         = 0 #enable / disable Limited Buffer Rate Matching
   rvid1              = 1 #Redundancy Version ID for transport block 1
   rvid2              = None #Redundancy Version ID for transport block 2
   numBatch           = 5 #Number of User equipments
   tbLen1             = None #Transport Block Size 1   
   tbLen2             = None #Transport Block Size 2
   tblock1            = None  # Generate the bits for transport block1
   tblock2            = None  # Generate the bits for transport block2                             
                             
   pdschTxObj  = PDSCH(symbolsPerSlot, numRB, mcsIndex, numlayers, scalingField, additionalOverhead,  numTBs) #PDSCH Object processing the PDSCH Upper Physical layer Chain
   pdschTxBits = pdschTxObj(enableLBRM, rvid1, rvid2, numBatch, tblock1, tblock2)                  

Example : Transmission of 2 Transport Block where the transport block is also inputed.

.. code-block:: python

   symbolsPerSlot     = 8 #Number of Symbols per slot
   numRB              = 20 #Number of Resource Blocks
   scalingField       = '01' #Scaling field
   mcsIndex           = 14 #Modulation Coding scheme index
   additionalOverhead = 0 #Additional Overheads
   numlayers          = [2, 3] #Number of layers
   numTBs             = 2 #Number of Transport Blocks
   enableLBRM         = 0 #enable / disable Limited Buffer Rate Matching
   rvid1              = 1 #Redundancy Version ID
   rvid2              = 2 #Redundancy Version ID
   numBatch           = 3 #Number of User equipments
   tbLen1             = 213176 #Transport Block Size 1   
   tbLen2             = 213176 #Transport Block Size 2
   tblock1            = np.random.randint(2,                  
                             size  = (numBatch, tbLen1), 
                             dtype = int)  # Generate the bits for transport block1     
   tblock2            = np.random.randint(2,                  
                             size  = (numBatch, tbLen2), 
                             dtype = int)  # Generate the bits for transport block2
                             
   pdschTxObj  = PDSCH(symbolsPerSlot, numRB, mcsIndex, numlayers, scalingField, additionalOverhead,  numTBs) #PDSCH Object processing the PDSCH Upper Physical layer Chain
   pdschTxBits = pdschTxObj(enableLBRM, rvid1, rvid2, numBatch, tblock1, tblock2)                  
                             

.. autoclass:: toolkit5G.PhysicalChannels.PDSCH.PDSCH
   :members:
   :exclude-members: call, build   
   
Transmitter Chain
------------------

.. toctree::
    :maxdepth: 4
    
    ComputeTBS
    
    TBTxProcessing
    
    CBSegmentation
    
    RateMatching
    
    CBConcatenation
          
   
