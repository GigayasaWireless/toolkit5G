Control Resource Set
====================
The modules provides the classes and functions that implement Control Resource Set or CORESET.
The CORESET defines the set of Resource Blocks (RBs) and the number of symbols that are designed to transmit PDCCH/DCI.
The Base Station (BS) transmits the PDCCH using Resource Elements (REs) which belong to a CORESET. The REs which belong to CORESET are defined as *Control Channel Elements (CCEs)*.
The PDCCH occupies a specific number of REs according to its *aggregation level*. An *aggregation level* is quantified in terms of the number of CCEs that it occupies.
The link adaption algorithm within the Base Station assigns a specific aggregation level according to the size of the DCI
payload and the UE coverage conditions. Small payloads can be accommodated using lower aggregation levels. UEs which experience poor coverage conditions are normally allocated higher aggregation levels.

The RBs allocated to the CORESET are specified using a higher layer parameter *frequencyDomainResources*.
This information element provides a bit string of 45 bits where each bit corresponds to 6 contiguous RBs with in the active DL BWP. i.e., A maximum of 6*45 = 270 RBs can be allocated.
A set of 6 contiguous RBs is included with in the CORESET if the corresponding bit with in the bit string is set to **1**. 

The number of symbols allocated to CORESET is specified using a higher layer parameter *duration*. A CORESET can be configured with a duration of 1,2 or 3 symbols.

3GPP has specified both non-interleaved and interleaved mappings between REGs and CCEs. The higher layer parameter *cce-REG-MappingType* is used to select between the non-interleaved and interleaved options.
When using interleaved mapping, REG bundles (number of REGs bundled together) are generated from 2, 3 or 6 REGs, as specified by *reg-BundleSize* or *L*.
REG bundle size of 2 and 6 are permitted when *duration* is either 1 or 2.
REG bundle size of 3 and 6 are permitted when *duration* is 3.
For non-interleaved, *L* always equals 6.

CCE are generated by grouping the REG bundles. For example, 2 REG bundles are grouped to generate a CCE when *L* = 3 for interleaved mapping. 

Higher layer parameter *interleaverSize* or *R* is configured to determine the number of sections that the CORESET bandwith is divided into when applying interleaving.
Higher layer paramter *shiftlndex* or *nshift*  can be used to apply a cyclic shift to the interleaving pattern. It can take any value from the set {0,1,...,274}.

.. note::
   The *Resource Elements (REs)* belonging to CORESET are organised into *Resource Element Groups (REGs)*. 
   1 REG = 1 RB in frequency domain and 1 symbol in time domain.
   1 REG = 12 REs, since 1 RB = 12 REs.
   1 CCE = 6 REGs = 6*12 = 72 REs.   





.. autoclass:: toolkit5G.ResourceMapping.CORESET
   :members:
   :exclude-members: call, build



An example of CORESET is given below. The REG to CCE mapping is displayed using a method :method:`displayCORESET`


**Example:**

**Interleaved mapping**

.. code-block:: Python

   # Assuming frequencyDomainResources = 11110000 00000000 00000000 00000000 00000
   # i.e., number of RBs allocated to CORESET are 6*4 = 24.
   >>> numRBsinCORESET = 24
   # duration of CORESET
   >>> duration = 3
   # Aggregation Level 
   >>> AL = 4
   # REG bundle Size
   >>> L = 3
   # Interleaver Size
   >>> R = 6 
   # Interleaver Shift Index
   >>> nshift = 0
   # Instanstiating CORESET object with above choosen parameters.
   >>> coresetObj = CORESET(aggregationLevel = AL, cce_REG_MappingType = "interleaved", reg_BundleSize = L,
                     interleaverSize = R, shiftIndex = nShift)
   # Physical RB indices where PDCCH can be transmitted                  
   >>> rbIndices  = coresetObj(numRBinCORESET, duration)
   # Displays CORESET REG to CCE mapping, REG Bundle indices, and CCE indices. 
   >>> coresetObj.displayCORESET() 

The following figure displays the REG to CCE mapping when interleaved mapping is choosen.

.. image:: ../../figures/interleaved_reg2cce.png
  :width: 800
  :alt: interleaved_reg2cce_mapping   


**Non-Interleaved mapping**

.. code-block:: Python

   # Assuming frequencyDomainResources = 11000000 00000000 00000000 00000000 00000
   # i.e., number of RBs allocated to CORESET are 6*2 = 12.
   >>> numRBsinCORESET = 12
   # duration of CORESET
   >>> duration = 3
   # Aggregation Level 
   >>> AL = 2
   # Instanstiating CORESET object with above choosen parameters.
   >>> coresetObj = CORESET(aggregationLevel = AL, cce_REG_MappingType = "non-interleaved")
   # Physical RB indices where PDCCH can be transmitted                  
   >>> rbIndices  = coresetObj(numRBinCORESET, duration)
   # Displays CORESET REG to CCE mapping, REG indices, and CCE indices. 
   >>> coresetObj.displayCORESET() 

The following figure displays the REG to CCE mapping when non-interleaved mapping is choosen.

.. image:: ../../figures/noninterleaved_reg2cce.png
  :width: 800
  :alt: interleaved_reg2cce_mapping      






References:
    .. [3GPPTS38211coreset] (3GPP TS 38.211 version 17.1.0 Release 17) 5G;NR;Physical channels and modulation '7.3.2.2 Control-Resource Set (CORESET)'
