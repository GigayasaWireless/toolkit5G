Least Square based Position Estimator for Hybrid ToA/mRTT and DoA
====================================================================


A hybrid positioning method that combines time measurements and Angle measurements leverages the strengths of both
approaches to achieve more accurate and robust positioning in wireless communication systems.

- The hybrid positioning method combines ToA/TDoA and AoA measurements to enhance accuracy and reliability.
- ToA/TDoA measurements provide accurate distance estimates, while AoA measurements offer directional information.
- By fusing ToA/TDoA and AoA measurements using techniques such as multilateration or maximum likelihood estimation, the hybrid method can mitigate the limitations of each individual technique.
- For example, ToA/TDoA measurements can help resolve ambiguity in AoA estimates, while AoA measurements can provide additional constraints for refining ToA/TDoA-based localization.

.. note::
    Hybrid Positioning requires only 1-2 LoS reference nodes with strong links in comparison to TDoA/AoA which requires 3-4 LoS reference nodes.


------------

**Code example**


.. code-block:: Python

    posEstimator  = HybridToAAoA()
    # Position Estimation Object:
        # Positioning based on: Hybrid ToA and DOA
        # Optimization Method: Least Square
        # txPosition: (numTranmitter, 3)
        # doaEst: (numTranmitter, 2)
        # ToAe: (numTranmitter, )

    positionEstimate, error   = posEstimator(refPosition=txPosition, toa=ToAe, doa = doaEst)

------------


The input output interface for usage of Hybrid ToA/mRTT and DoA algorithm is provided below.

.. autoclass:: toolkit5G.Positioning.HybridToAAoA
   :members:
   :exclude-members: call, build

------------

Least Square based Position Estimator for Hybrid TDoA and DoA
====================================================================


**Code example: Position Estimation using Hybrid TDoA and Direction of Arrival Estimates**

.. code-block:: Python

    posEstimator  = HybridTDoAAoA()
    # Position Estimation Object:
        # Positioning based on: Hybrid TDoA and DOA
        # Optimization Method: Least Square
        # txPosition: (numTranmitter, 3)
        # doaEst: (numTranmitter, 2)
        # tdoaEst: (numTranmitter-1, )

    positionEstimate, error   = posEstimator(refPosition=txPosition, tdoa=tdoaEst, doa = doaEst)

------------


The input output interface for usage of Hybrid TDoA and DoA algorithm is provided below.

.. autoclass:: toolkit5G.Positioning.HybridTDoAAoA
   :members:
   :exclude-members: call, build
